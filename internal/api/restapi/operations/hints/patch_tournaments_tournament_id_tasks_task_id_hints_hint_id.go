// Code generated by go-swagger; DO NOT EDIT.

package hints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PatchTournamentsTournamentIDTasksTaskIDHintsHintIDHandlerFunc turns a function with the right signature into a patch tournaments tournament ID tasks task ID hints hint ID handler
type PatchTournamentsTournamentIDTasksTaskIDHintsHintIDHandlerFunc func(PatchTournamentsTournamentIDTasksTaskIDHintsHintIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PatchTournamentsTournamentIDTasksTaskIDHintsHintIDHandlerFunc) Handle(params PatchTournamentsTournamentIDTasksTaskIDHintsHintIDParams) middleware.Responder {
	return fn(params)
}

// PatchTournamentsTournamentIDTasksTaskIDHintsHintIDHandler interface for that can handle valid patch tournaments tournament ID tasks task ID hints hint ID params
type PatchTournamentsTournamentIDTasksTaskIDHintsHintIDHandler interface {
	Handle(PatchTournamentsTournamentIDTasksTaskIDHintsHintIDParams) middleware.Responder
}

// NewPatchTournamentsTournamentIDTasksTaskIDHintsHintID creates a new http.Handler for the patch tournaments tournament ID tasks task ID hints hint ID operation
func NewPatchTournamentsTournamentIDTasksTaskIDHintsHintID(ctx *middleware.Context, handler PatchTournamentsTournamentIDTasksTaskIDHintsHintIDHandler) *PatchTournamentsTournamentIDTasksTaskIDHintsHintID {
	return &PatchTournamentsTournamentIDTasksTaskIDHintsHintID{Context: ctx, Handler: handler}
}

/*
	PatchTournamentsTournamentIDTasksTaskIDHintsHintID swagger:route PATCH /tournaments/{tournamentId}/tasks/{taskId}/hints/{hintId} hints patchTournamentsTournamentIdTasksTaskIdHintsHintId

Open hint for task
*/
type PatchTournamentsTournamentIDTasksTaskIDHintsHintID struct {
	Context *middleware.Context
	Handler PatchTournamentsTournamentIDTasksTaskIDHintsHintIDHandler
}

func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPatchTournamentsTournamentIDTasksTaskIDHintsHintIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
