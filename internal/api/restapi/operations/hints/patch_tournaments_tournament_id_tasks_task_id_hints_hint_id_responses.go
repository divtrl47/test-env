// Code generated by go-swagger; DO NOT EDIT.

package hints

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"kafka-playground/internal/api/models"
)

// PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOKCode is the HTTP code returned for type PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK
const PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOKCode int = 200

/*
PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK Hint opened

swagger:response patchTournamentsTournamentIdTasksTaskIdHintsHintIdOK
*/
type PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Hint `json:"body,omitempty"`
}

// NewPatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK creates PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK with default headers values
func NewPatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK() *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK {

	return &PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK{}
}

// WithPayload adds the payload to the patch tournaments tournament Id tasks task Id hints hint Id o k response
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK) WithPayload(payload *models.Hint) *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tournaments tournament Id tasks task Id hints hint Id o k response
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK) SetPayload(payload *models.Hint) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorizedCode is the HTTP code returned for type PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized
const PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorizedCode int = 401

/*
PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized Unauthorized

swagger:response patchTournamentsTournamentIdTasksTaskIdHintsHintIdUnauthorized
*/
type PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized creates PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized with default headers values
func NewPatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized() *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized {

	return &PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized{}
}

// WithPayload adds the payload to the patch tournaments tournament Id tasks task Id hints hint Id unauthorized response
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized) WithPayload(payload *models.Error) *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tournaments tournament Id tasks task Id hints hint Id unauthorized response
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbiddenCode is the HTTP code returned for type PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden
const PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbiddenCode int = 403

/*
PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden Forbidden

swagger:response patchTournamentsTournamentIdTasksTaskIdHintsHintIdForbidden
*/
type PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden creates PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden with default headers values
func NewPatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden() *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden {

	return &PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden{}
}

// WithPayload adds the payload to the patch tournaments tournament Id tasks task Id hints hint Id forbidden response
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden) WithPayload(payload *models.Error) *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tournaments tournament Id tasks task Id hints hint Id forbidden response
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFoundCode is the HTTP code returned for type PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound
const PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFoundCode int = 404

/*
PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound Resource not found

swagger:response patchTournamentsTournamentIdTasksTaskIdHintsHintIdNotFound
*/
type PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound creates PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound with default headers values
func NewPatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound() *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound {

	return &PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound{}
}

// WithPayload adds the payload to the patch tournaments tournament Id tasks task Id hints hint Id not found response
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound) WithPayload(payload *models.Error) *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch tournaments tournament Id tasks task Id hints hint Id not found response
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchTournamentsTournamentIDTasksTaskIDHintsHintIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
